var l=async()=>({React:(await import("react")).default,ReactDOM:(await import("react-dom")).default,ReactDOMClient:(await import("react-dom/client")).default}),d=async function(t,n,c,a={},o={}){let{React:s,ReactDOMClient:r}=await l(),e=t.dataset.liveReactProps?JSON.parse(t.dataset.liveReactProps):{};t.dataset.liveReactMerge?e={...o,...e,...a}:e={...e,...a};let i=s.createElement(c,e);return r.createRoot(n).render(i),e},p=async function(t,n){let c=t.nextElementSibling,a=Array.prototype.reduce.call(t.dataset.liveReactClass.split("."),(o,s)=>o[s],window);return await d(t,c,a,n),{target:c,componentClass:a}},R={async mounted(){let{target:t,componentClass:n}=await p(this.el)},updated(){},destroyed(){}};export{R as default};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vYXNzZXRzL2pzL3Bob2VuaXhfbGl2ZV9yZWFjdC5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG4vLyBpbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiXG5cbi8vIGltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tICdyZWFjdC1kb20vY2xpZW50JztcblxuY29uc3QgbG9hZFJlYWN0ID0gYXN5bmMgKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIFJlYWN0OiAoYXdhaXQgaW1wb3J0KFwicmVhY3RcIikpLmRlZmF1bHQsXG4gICAgUmVhY3RET006IChhd2FpdCBpbXBvcnQoXCJyZWFjdC1kb21cIikpLmRlZmF1bHQsXG4gICAgUmVhY3RET01DbGllbnQ6IChhd2FpdCBpbXBvcnQoXCJyZWFjdC1kb20vY2xpZW50XCIpKS5kZWZhdWx0LFxuICB9XG59XG5cbmNvbnN0IHJlbmRlciA9IGFzeW5jIGZ1bmN0aW9uIChlbCwgdGFyZ2V0LCBjb21wb25lbnRDbGFzcywgYWRkaXRpb25hbFByb3BzID0ge30sIHByZXZpb3VzUHJvcHMgPSB7fSkge1xuICBjb25zdCB7IFJlYWN0LCBSZWFjdERPTUNsaWVudCB9ID0gYXdhaXQgbG9hZFJlYWN0KCk7XG4gIGxldCBwcm9wcyA9IGVsLmRhdGFzZXQubGl2ZVJlYWN0UHJvcHMgPyBKU09OLnBhcnNlKGVsLmRhdGFzZXQubGl2ZVJlYWN0UHJvcHMpIDoge307XG4gIGlmIChlbC5kYXRhc2V0LmxpdmVSZWFjdE1lcmdlKSB7XG4gICAgcHJvcHMgPSB7IC4uLnByZXZpb3VzUHJvcHMsIC4uLnByb3BzLCAuLi5hZGRpdGlvbmFsUHJvcHMgfVxuICB9IGVsc2Uge1xuICAgIHByb3BzID0geyAuLi5wcm9wcywgLi4uYWRkaXRpb25hbFByb3BzIH1cbiAgfVxuICBjb25zdCByZWFjdEVsZW1lbnQgPSBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudENsYXNzLCBwcm9wcyk7XG4gIGNvbnN0IHJvb3QgPSBSZWFjdERPTUNsaWVudC5jcmVhdGVSb290KHRhcmdldCk7XG4gIHJvb3QucmVuZGVyKHJlYWN0RWxlbWVudClcbiAgcmV0dXJuIHByb3BzO1xufVxuXG5jb25zdCBpbml0TGl2ZVJlYWN0RWxlbWVudCA9IGFzeW5jIGZ1bmN0aW9uIChlbCwgYWRkaXRpb25hbFByb3BzKSB7XG4gIGNvbnN0IHRhcmdldCA9IGVsLm5leHRFbGVtZW50U2libGluZztcbiAgY29uc3QgY29tcG9uZW50Q2xhc3MgPSBBcnJheS5wcm90b3R5cGUucmVkdWNlLmNhbGwoZWwuZGF0YXNldC5saXZlUmVhY3RDbGFzcy5zcGxpdCgnLicpLCAoYWNjLCBlbCkgPT4geyByZXR1cm4gYWNjW2VsXSB9LCB3aW5kb3cpO1xuICBhd2FpdCByZW5kZXIoZWwsIHRhcmdldCwgY29tcG9uZW50Q2xhc3MsIGFkZGl0aW9uYWxQcm9wcyk7XG4gIHJldHVybiB7IHRhcmdldDogdGFyZ2V0LCBjb21wb25lbnRDbGFzczogY29tcG9uZW50Q2xhc3MgfTtcbn1cblxuLy8gY29uc3QgaW5pdExpdmVSZWFjdCA9IGZ1bmN0aW9uICgpIHtcbi8vICAgY29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1saXZlLXJlYWN0LWNsYXNzXScpXG4vLyAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoZWxlbWVudHMsIGVsID0+IHtcbi8vICAgICBpbml0TGl2ZVJlYWN0RWxlbWVudChlbClcbi8vICAgfSk7XG4vLyB9XG5cbmNvbnN0IExpdmVSZWFjdCA9IHtcbiAgYXN5bmMgbW91bnRlZCgpIHtcbiAgICAvLyBjb25zdCB7IGVsIH0gPSB0aGlzO1xuICAgIC8vIGNvbnN0IHB1c2hFdmVudCA9IHRoaXMucHVzaEV2ZW50LmJpbmQodGhpcyk7XG4gICAgLy8gY29uc3QgcHVzaEV2ZW50VG8gPSB0aGlzLnB1c2hFdmVudFRvICYmIHRoaXMucHVzaEV2ZW50VG8uYmluZCh0aGlzKTtcbiAgICAvLyBjb25zdCBoYW5kbGVFdmVudCA9IHRoaXMuaGFuZGxlRXZlbnQgJiYgdGhpcy5oYW5kbGVFdmVudC5iaW5kKHRoaXMpO1xuICAgIGNvbnN0IHsgdGFyZ2V0LCBjb21wb25lbnRDbGFzcyB9ID0gYXdhaXQgaW5pdExpdmVSZWFjdEVsZW1lbnQodGhpcy5lbCk7XG4gICAgLy97IHB1c2hFdmVudCB9KTtcbiAgICAvLyBkZWJ1Z2dlcjtcbiAgICAvLyBjb25zdCBwcm9wcyA9IHJlbmRlcihlbCwgdGFyZ2V0LCBjb21wb25lbnRDbGFzcywgeyBwdXNoRXZlbnQsIHB1c2hFdmVudFRvLCBoYW5kbGVFdmVudCB9KTtcbiAgICAvLyBpZiAoZWwuZGF0YXNldC5saXZlUmVhY3RNZXJnZSkgdGhpcy5wcm9wcyA9IHByb3BzXG4gICAgLy8gT2JqZWN0LmFzc2lnbih0aGlzLCB7IHRhcmdldCwgY29tcG9uZW50Q2xhc3MgfSk7XG4gIH0sXG5cbiAgdXBkYXRlZCgpIHtcbiAgICAvLyBjb25zdCB7IGVsLCB0YXJnZXQsIGNvbXBvbmVudENsYXNzIH0gPSB0aGlzO1xuICAgIC8vIGNvbnN0IHB1c2hFdmVudCA9IHRoaXMucHVzaEV2ZW50LmJpbmQodGhpcyk7XG4gICAgLy8gY29uc3QgcHVzaEV2ZW50VG8gPSB0aGlzLnB1c2hFdmVudFRvICYmIHRoaXMucHVzaEV2ZW50VG8uYmluZCh0aGlzKTtcbiAgICAvLyBjb25zdCBoYW5kbGVFdmVudCA9IHRoaXMuaGFuZGxlRXZlbnQ7XG4gICAgLy8gY29uc3QgcHJldmlvdXNQcm9wcyA9IHRoaXMucHJvcHM7XG4gICAgLy8gY29uc3QgcHJvcHMgPSByZW5kZXIoZWwsIHRhcmdldCwgY29tcG9uZW50Q2xhc3MsIHsgcHVzaEV2ZW50LCBwdXNoRXZlbnRUbyB9LCBwcmV2aW91c1Byb3BzKTtcbiAgICAvLyBpZiAoZWwuZGF0YXNldC5saXZlUmVhY3RNZXJnZSkgdGhpcy5wcm9wcyA9IHByb3BzXG4gIH0sXG5cbiAgZGVzdHJveWVkKCkge1xuICAgIC8vIGNvbnN0IHsgdGFyZ2V0IH0gPSB0aGlzO1xuICAgIC8vIFJlYWN0RE9NLnVubW91bnRDb21wb25lbnRBdE5vZGUodGFyZ2V0KTtcbiAgfVxufVxuXG5leHBvcnQge1xuICBMaXZlUmVhY3QgYXMgZGVmYXVsdCxcbiAgLy8gaW5pdExpdmVSZWFjdCwgaW5pdExpdmVSZWFjdEVsZW1lbnRcbn07XG4iXSwKICAibWFwcGluZ3MiOiAiQUFLQSxJQUFNQSxFQUFZLFVBQ1QsQ0FDTCxPQUFRLEtBQU0sUUFBTyxPQUFPLEdBQUcsUUFDL0IsVUFBVyxLQUFNLFFBQU8sV0FBVyxHQUFHLFFBQ3RDLGdCQUFpQixLQUFNLFFBQU8sa0JBQWtCLEdBQUcsT0FDckQsR0FHSUMsRUFBUyxlQUFnQkMsRUFBSUMsRUFBUUMsRUFBZ0JDLEVBQWtCLENBQUMsRUFBR0MsRUFBZ0IsQ0FBQyxFQUFHLENBQ25HLEdBQU0sQ0FBRSxNQUFBQyxFQUFPLGVBQUFDLENBQWUsRUFBSSxNQUFNUixFQUFVLEVBQzlDUyxFQUFRUCxFQUFHLFFBQVEsZUFBaUIsS0FBSyxNQUFNQSxFQUFHLFFBQVEsY0FBYyxFQUFJLENBQUMsRUFDN0VBLEVBQUcsUUFBUSxlQUNiTyxFQUFRLENBQUUsR0FBR0gsRUFBZSxHQUFHRyxFQUFPLEdBQUdKLENBQWdCLEVBRXpESSxFQUFRLENBQUUsR0FBR0EsRUFBTyxHQUFHSixDQUFnQixFQUV6QyxJQUFNSyxFQUFlSCxFQUFNLGNBQWNILEVBQWdCSyxDQUFLLEVBRTlELE9BRGFELEVBQWUsV0FBV0wsQ0FBTSxFQUN4QyxPQUFPTyxDQUFZLEVBQ2pCRCxDQUNULEVBRU1FLEVBQXVCLGVBQWdCVCxFQUFJRyxFQUFpQixDQUNoRSxJQUFNRixFQUFTRCxFQUFHLG1CQUNaRSxFQUFpQixNQUFNLFVBQVUsT0FBTyxLQUFLRixFQUFHLFFBQVEsZUFBZSxNQUFNLEdBQUcsRUFBRyxDQUFDVSxFQUFLVixJQUFnQlUsRUFBSVYsQ0FBRSxFQUFLLE1BQU0sRUFDaEksYUFBTUQsRUFBT0MsRUFBSUMsRUFBUUMsRUFBZ0JDLENBQWUsRUFDakQsQ0FBRSxPQUFRRixFQUFRLGVBQWdCQyxDQUFlLENBQzFELEVBU01TLEVBQVksQ0FDaEIsTUFBTSxTQUFVLENBS2QsR0FBTSxDQUFFLE9BQUFWLEVBQVEsZUFBQUMsQ0FBZSxFQUFJLE1BQU1PLEVBQXFCLEtBQUssRUFBRSxDQU12RSxFQUVBLFNBQVUsQ0FRVixFQUVBLFdBQVksQ0FHWixDQUNGIiwKICAibmFtZXMiOiBbImxvYWRSZWFjdCIsICJyZW5kZXIiLCAiZWwiLCAidGFyZ2V0IiwgImNvbXBvbmVudENsYXNzIiwgImFkZGl0aW9uYWxQcm9wcyIsICJwcmV2aW91c1Byb3BzIiwgIlJlYWN0IiwgIlJlYWN0RE9NQ2xpZW50IiwgInByb3BzIiwgInJlYWN0RWxlbWVudCIsICJpbml0TGl2ZVJlYWN0RWxlbWVudCIsICJhY2MiLCAiTGl2ZVJlYWN0Il0KfQo=
